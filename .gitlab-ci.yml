include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/release/publish.yml"

Publish latest docker image:
  before_script:
    - cd v2/
    - apk add --no-cache git make go
    - make linuxamd64
    - mkdir -p docker/assets/linux/amd64 docker/assets/linux/arm64
    - cp -f bin/linuxamd64/glauth docker/assets/linux/amd64/glauth
  script:
    - AUTH=$(echo -n "${WALDUR_DOCKER_HUB_USER}:${WALDUR_DOCKER_HUB_PASSWORD}" | base64)
    - |
      cat << EOF > /kaniko/.docker/config.json
      {
        "auths": {
          "https://index.docker.io/v1/": {
            "auth": "${AUTH}"
          }
        }
      }
      EOF
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/v2/docker"
      --dockerfile "${CI_PROJECT_DIR}/v2/docker/Dockerfile-waldur"
      --cache=true
      --build-arg="DOCKER_REGISTRY=${DOCKER_REGISTRY}"
      --destination "opennode/${CI_PROJECT_NAME}:latest"

Publish docker image with specific version:
  script:
    - AUTH=$(echo -n "${WALDUR_DOCKER_HUB_USER}:${WALDUR_DOCKER_HUB_PASSWORD}" | base64)
    - |
      cat << EOF > /kaniko/.docker/config.json
      {
        "auths": {
          "https://index.docker.io/v1/": {
            "auth": "${AUTH}"
          }
        }
      }
      EOF
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/v2/docker"
      --dockerfile "${CI_PROJECT_DIR}/v2/docker/Dockerfile-waldur"
      --cache=true
      --build-arg="DOCKER_REGISTRY=${DOCKER_REGISTRY}"
      --destination "opennode/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}"

Publish docs:
  stage: deploy
  image:
    name: registry.hpc.ut.ee/mirror/alpine/git:v2.30.2
    entrypoint: [""]
  interruptible: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    - cd /tmp/
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-docs.git"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - cp -v $CI_PROJECT_DIR/systemd-instructions.md /tmp/waldur-docs/docs/integrations/glauth/
    - cd /tmp/waldur-docs/
    - git add docs/integrations/glauth/
    - git commit -m "Add systemd-instructions" || exit 0
    - git branch new-glauth-systemd-instructions
    - git push --set-upstream origin new-glauth-systemd-instructions:master
